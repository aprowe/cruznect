<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>hackathon</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>-3040356466988288884</string>
			<key>name</key>
			<string>Hackathon</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentFilter</key>
			<dict/>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGNjdYJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoK0HCBUWFxgZHSQoLDA0VSRudWxs0wkK
			CwwQFFdOUy5rZXlzWk5TLm9iamVjdHNWJGNsYXNzow0OD4ACgAOA
			BKMREhOABYAGgAiADFR0eXBlVHJvd3NUa2V5c18QJlNlbGVjdGlv
			bkRldGFpbFR5cGVQcmltYXJ5S2V5ZWREZXRhaWxz0wkKCxobHKCg
			gAfSHh8gIVokY2xhc3NuYW1lWCRjbGFzc2VzXxATTlNNdXRhYmxl
			RGljdGlvbmFyeaMgIiNcTlNEaWN0aW9uYXJ5WE5TT2JqZWN00goL
			JSehJoAJgAvSCykqK1lOUy5zdHJpbmeAClJpZNIeHy0uXxAPTlNN
			dXRhYmxlU3RyaW5noy0vI1hOU1N0cmluZ9IeHzEyXk5TTXV0YWJs
			ZUFycmF5ozEzI1dOU0FycmF50h4fIjWiIiNfEA9OU0tleWVkQXJj
			aGl2ZXLRODlUZGF0YYABAAgAEQAaACMALQAyADcARQBLAFIAWgBl
			AGwAcAByAHQAdgB6AHwAfgCAAIIAhwCMAJEAugDBAMIAwwDFAMoA
			1QDeAPQA+AEFAQ4BEwEVARcBGQEeASgBKgEtATIBRAFIAVEBVgFl
			AWkBcQF2AXkBiwGOAZMAAAAAAAACAQAAAAAAAAA6AAAAAAAAAAAA
			AAAAAAABlQ==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {911, 476}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>DROP TABLE IF EXISTS project_required;
DROP TABLE IF EXISTS user_projects;
DROP TABLE IF EXISTS user_talents;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS project;
DROP TABLE IF EXISTS talent;


CREATE TABLE user (
	id INT NOT NULL AUTO_INCREMENT, 
	username VARCHAR(20), 
	password VARCHAR(20), 
	email VARCHAR(50),  
	active INT,
	profilepic VARCHAR(100),
	PRIMARY KEY (id)
);

CREATE TABLE talent(
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(50),
	PRIMARY KEY (id)
);

CREATE TABLE project(
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(50),
	description LONGTEXT,
	picture VARCHAR(100),
	owner INT NOT NULL,
	PRIMARY KEY (id)
);

CREATE TABLE project_required (
 	project_id INT NOT NULL,
 	talent_id INT NOT NULL,
 	number_of_people INT,
 	PRIMARY KEY(project_id),
 	FOREIGN KEY(project_id) REFERENCES project(id),
 	FOREIGN KEY(talent_id) REFERENCES talent(id)
);

	
CREATE TABLE user_projects(
	user_id INT NOT NULL,
	project_id INT NOT NULL,
	PRIMARY KEY(user_id),
	FOREIGN KEY(user_id) REFERENCES user(id),
	FOREIGN KEY(project_id) REFERENCES project(id)
);

CREATE TABLE user_talents(
		user_id INT NOT NULL,
		talent_id INT NOT NULL,
		PRIMARY KEY(user_id),
		FOREIGN KEY(user_id) REFERENCES user(id),
		FOREIGN KEY(talent_id) REFERENCES talent(id)
);</string>
			<key>table</key>
			<string>user</string>
			<key>view</key>
			<string>SP_VIEW_CONTENT</string>
			<key>windowVerticalDividerPosition</key>
			<real>202</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>DROP TABLE IF EXISTS project_required;
DROP TABLE IF EXISTS user_projects;
DROP TABLE IF EXISTS user_talents;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS project;
DROP TABLE IF EXISTS talent;
CREATE TABLE user (
	id INT NOT NULL AUTO_INCREMENT, 
	username VARCHAR(20), 
	password VARCHAR(20), 
	email VARCHAR(50),  
	active INT,
	profilepic VARCHAR(100),
	PRIMARY KEY (id)
);
CREATE TABLE talent(
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(50),
	PRIMARY KEY (id)
);
CREATE TABLE project(
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(50),
	description LONGTEXT,
	picture VARCHAR(100),
	owner INT NOT NULL,
	PRIMARY KEY (id)
);
CREATE TABLE project_required (
 	project_id INT NOT NULL,
 	talent_id INT NOT NULL,
 	number_of_people INT,
 	PRIMARY KEY(project_id),
 	FOREIGN KEY(project_id) REFERENCES project(id),
 	FOREIGN KEY(talent_id) REFERENCES talent(id)
);
CREATE TABLE user_projects(
	user_id INT NOT NULL,
	project_id INT NOT NULL,
	PRIMARY KEY(user_id),
	FOREIGN KEY(user_id) REFERENCES user(id),
	FOREIGN KEY(project_id) REFERENCES project(id)
);
CREATE TABLE user_talents(
		user_id INT NOT NULL,
		talent_id INT NOT NULL,
		PRIMARY KEY(user_id),
		FOREIGN KEY(user_id) REFERENCES user(id),
		FOREIGN KEY(talent_id) REFERENCES talent(id)
)</string>
		<string>DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS project;
DROP TABLE IF EXISTS talent;
DROP TABLE IF EXISTS project_required;
DROP TABLE IF EXISTS user_projects;
DROP TABLE IF EXISTS user_talents;
CREATE TABLE user (
	id INT NOT NULL AUTO_INCREMENT, 
	username VARCHAR(20), 
	password VARCHAR(20), 
	email VARCHAR(50),  
	active INT,
	profilepic VARCHAR(100),
	PRIMARY KEY (id)
);
CREATE TABLE talent(
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(50),
	PRIMARY KEY (id)
);
CREATE TABLE project(
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(50),
	description LONGTEXT,
	picture VARCHAR(100),
	owner INT NOT NULL,
	PRIMARY KEY (id)
);
CREATE TABLE project_required (
 	project_id INT NOT NULL,
 	talent_id INT NOT NULL,
 	number_of_people INT,
 	PRIMARY KEY(project_id),
 	FOREIGN KEY(project_id) REFERENCES project(id),
 	FOREIGN KEY(talent_id) REFERENCES talent(id)
);
CREATE TABLE user_projects(
	user_id INT NOT NULL,
	project_id INT NOT NULL,
	PRIMARY KEY(user_id),
	FOREIGN KEY(user_id) REFERENCES user(id),
	FOREIGN KEY(project_id) REFERENCES project(id)
);
CREATE TABLE user_talents(
		user_id INT NOT NULL,
		talent_id INT NOT NULL,
		PRIMARY KEY(user_id),
		FOREIGN KEY(user_id) REFERENCES user(id),
		FOREIGN KEY(talent_id) REFERENCES talent(id)
)</string>
		<string>IF EXISTS DROP TABLE user</string>
		<string>DROP TABLE user</string>
		<string>CREATE TABLE user (
	id INT NOT NULL AUTO_INCREMENT, 
	username VARCHAR(20), 
	password VARCHAR(20), 
	email VARCHAR(50),  
	active INT,
	profilepic VARCHAR(100),
	PRIMARY KEY (id)
)</string>
		<string>CREATE TABLE user (
	id INT NOT NULL AUTO_INCREMENT, 
	username VARCHAR(20), 
	password VARCHAR(20), 
	email VARCHAR(50),  
	active INT,
	profilepic VARCHAR(100),
	PRIMARY KEY ('id')
)</string>
		<string>CREATE TABLE user (
	id INT NOT NULL AUTO_INCREMENT, 
	'username' VARCHAR(20), 
	'password' VARCHAR(20), 
	'email' VARCHAR(50),  
	'active' INT,
	'profilepic' VARCHAR(100),
	PRIMARY KEY ('id')
)</string>
		<string>CREATE TABLE user (
	'id' INT NOT NULL AUTO_INCREMENT, 
	'username' VARCHAR(20), 
	'password' VARCHAR(20), 
	'email' VARCHAR(50),  
	'active' INT,
	'profilepic' VARCHAR(100),
	PRIMARY KEY ('id')
)</string>
		<string>CREATE TABLE user (
	'id' INT NOT NULL AUTO_INCREMENT, 
	'username' VARCHAR(20), 
	'password' VARCHAR(50), 
	'email' VARCHAR(50),  
	'active' INT,
	'profilepic' VARCHAR(100),
	PRIMARY KEY ('id')
)</string>
		<string>CREATE TABLE user (
	'id' INT NOT NULL 'AUTO_INCREMENT', 
	'username' VARCHAR(20), 
	'password' VARCHAR(50), 
	'email' VARCHAR(50),  
	'active' INT,
	'profilepic' VARCHAR(100),
	PRIMARY KEY ('id')
)</string>
		<string>CREATE TABLE sorteo (fecha DATE, nombre VARCHAR(20), apellidos VARCHAR(20), programa VARCHAR(10), movil INT(15), fijo INT(15))</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.5.34</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
